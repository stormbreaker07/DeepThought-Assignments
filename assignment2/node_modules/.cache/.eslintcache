[{"/home/FoolMonkey007/Study/DeepThoughtAssignments/assignment2/src/index.js":"1","/home/FoolMonkey007/Study/DeepThoughtAssignments/assignment2/src/reportWebVitals.js":"2","/home/FoolMonkey007/Study/DeepThoughtAssignments/assignment2/src/App.js":"3","/home/FoolMonkey007/Study/DeepThoughtAssignments/assignment2/src/Giphy.js":"4","/home/FoolMonkey007/Study/DeepThoughtAssignments/assignment2/src/Reddit.js":"5","/home/FoolMonkey007/Study/DeepThoughtAssignments/assignment2/src/hs.js":"6"},{"size":291,"mtime":1629853535561,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1629802152102,"results":"9","hashOfConfig":"8"},{"size":678,"mtime":1629853570012,"results":"10","hashOfConfig":"8"},{"size":4978,"mtime":1629853263694,"results":"11","hashOfConfig":"8"},{"size":3960,"mtime":1629853397424,"results":"12","hashOfConfig":"8"},{"size":109,"mtime":1629853143270,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"178azeg",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/FoolMonkey007/Study/DeepThoughtAssignments/assignment2/src/index.js",[],"/home/FoolMonkey007/Study/DeepThoughtAssignments/assignment2/src/reportWebVitals.js",[],"/home/FoolMonkey007/Study/DeepThoughtAssignments/assignment2/src/App.js",[],"/home/FoolMonkey007/Study/DeepThoughtAssignments/assignment2/src/Giphy.js",["28","29","30","31","32","33"],"import './icon.css'\nimport classes from './Giphy.module.css';\nimport {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport Reddit from \"./Reddit\";\n\n\n\nconst Giphy = () => {\n\n    const APIKEY =  \"Peg9aT5W2QKAEjgFlyQWg6vhpDEmJbXD\";\n\n    const [searchHistory , setSearchHistory] = useState(\n        {history : [\"trending\"]}\n    )\n\n    const [inputValue , setInputValue] = useState(\n        {value : \"trending\"}\n    );\n\n    const onChangeHandler = (e) => {\n        e.preventDefault();\n            setInputValue({\n                value: e.target.value})\n    }\n\n    const [responseData , setResponseData] = useState(\n        {\n            data : []\n        }\n    )\n\n    useEffect(() => {\n        let url = `https://api.giphy.com/v1/gifs/search?api_key=f4ee250fb7fc4ccf88cc2260099165c8&q=trending&limit=25&offset=0&rating=G&lang=en`;\n        axios.get(url)\n            .then((response) => {\n                console.log(response.data.data)\n                setResponseData({\n                    data : response.data.data\n                })\n            }).catch((err) => {\n            alert(\"operation unsuccessful\");\n        });\n    },[])\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        let temp = searchHistory.history;\n        let flag = 0;\n        for(let i=0 ; i<temp.length ; i++) {\n            if (temp[i] == inputValue.value) {\n                flag = 1;\n            }\n        }\n\n        if(flag === 0) {\n            temp.push(inputValue.value)\n        }\n\n        setSearchHistory(\n            {history : temp}\n        )\n        let search = inputValue.value.trim();\n        asyncCallMethod(search);\n        }\n\n        const asyncCallMethod = (search) => {\n            let url = `https://api.giphy.com/v1/gifs/search?api_key=f4ee250fb7fc4ccf88cc2260099165c8&q=${search}&limit=27&offset=0&rating=G&lang=en`;\n            console.log(url);\n\n            //axios get method\n            axios.get(url)\n                .then((response) => {\n                    console.log(response.data.data)\n                    setResponseData({\n                        data : response.data.data\n                    })\n                }).catch((err) => {\n                alert(\"operation unsuccessful\");\n            });\n        }\n\n        const onClickHistoryHander = (search) => {\n            setInputValue( {\n                value : search\n            })\n            asyncCallMethod(search);\n        }\n\n\n    return (\n        <div>\n        <header className={classes.header}>\n            <nav>\n                <a href=\"/reddit\" className={classes.redditLinkPos}>\n                    Reddit <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n                </a>\n            </nav>\n            <i className=\"fa fa-picture-o fa-6\" aria-hidden=\"true\"></i><h1 className=\"App-title\">Hello, Giphy!</h1>\n        </header>\n\n        <div className={classes.mainBody}>\n            <div className={classes.searchBar}>\n                <h1># </h1>\n                <form onSubmit={onSubmitHandler}>\n                    <input className={classes.inputStyle} type=\"text\" onChange={onChangeHandler} value={inputValue.value}></input>\n                </form>\n            </div>\n\n            <div className={classes.resultBody}>\n                <div className={classes.history}>\n                    <h2>Search History</h2>\n                    <ul className={classes.ulStyle}>\n                        {\n                            searchHistory.history.map((data) => <li key={data} className={classes.liStyle} onClick={() => onClickHistoryHander(data)}>{data}</li>)\n                        }\n                    </ul>\n                </div>\n\n                <section className={classes.searchResultBody}>\n                    {\n                        responseData.data.map(item => (\n                            <div className={classes.gifOuterContainer} key={item.id}>\n                                <h2 ><\n                                    a className={classes.gifTestColor} href={item.bitly_url} >{item.title}</a>\n                                </h2>\n                                <a className={classes.gifImageBoundary} href={item.bitly_url} >\n                                    <img className={classes.imageSize} src={item.images.preview_gif.url} alt=\"\" />\n                                </a>\n\n                                <p><a className={classes.iconStyle} href={item.bitly_url} ><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></a>\n                                    <a className={classes.iconStyle} href={item.bitly_url} ><i className=\"fa fa-download\" aria-hidden=\"true\"></i></a>\n                                    <a className={classes.iconStyle} href={item.bitly_url} ><i className=\"fa fa-link\" aria-hidden=\"true\"></i></a>\n                                </p>\n                            </div>\n                        ))\n                    }\n                </section>\n            </div>\n        </div>\n\n        </div>\n    )\n}\n\nexport default Giphy;","/home/FoolMonkey007/Study/DeepThoughtAssignments/assignment2/src/Reddit.js",["34","35","36","37","38"],"import classes from \"./Reddit.module.css\";\nimport './icon.css';\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Giphy from \"./Giphy\";\n\n\nconst Reddit =() => {\n\n\n    const [inputValue , setInputValue] = useState(\n        {value : \"aww\"}\n    );\n\n\n    const [gifDataList , setGifDataList] = useState({\n        data : []\n    })\n\n    useEffect(() => {\n        let url = `https://www.reddit.com/r/aww/new.json?sort=new`;\n        axios.get(url)\n            .then((response) => {\n                console.log(response.data.data.children)\n                setGifDataList({\n                    data : response.data.data.children\n                })\n            }).catch((err) => {\n            alert(\"operation unsuccessful\");\n        });\n    },[])\n\n    const onChangeHandler = (e) => {\n        e.preventDefault();\n        setInputValue({\n            value: e.target.value})\n    }\n\n\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const search = inputValue.value;\n        asyncCall(search);\n    }\n\n    const asyncCall = (search) => {\n        axios.get(`https://www.reddit.com/r/${search}/new.json?sort=new`)\n            .then((response) => {\n                 setGifDataList({data : response.data.data.children})\n                console.log(gifDataList.data)\n            }).catch((err) => {\n                alert(\"operation unsuccessful\");\n        })\n    }\n\n\n\n\n    return (\n        <div>\n            <header className={classes.header}>\n                <nav>\n                    <a href=\"/giphy\" className={classes.redditLinkPos}>\n                        Giphy <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n                    </a>\n                </nav>\n                <i className=\"fa fa-reddit-alien fa-6\" aria-hidden=\"true\"></i><h1 className=\"App-title\">Hello, Reddit!</h1>\n            </header>\n\n            <div className={classes.mainBody}>\n                <div className={classes.searchBar}>\n                    <h1>/r/ </h1>\n                    <form onSubmit={onSubmitHandler}>\n                        <input className={classes.inputStyle} type=\"text\" onChange={onChangeHandler} value={inputValue.value}></input>\n                    </form>\n                </div>\n\n                <div className={classes.searchResultBody}>\n                    {\n                    gifDataList.data.map(item => (\n                    <div className={classes.gifOuterContainer} key={item.data.id}>\n                        <p className={classes.para}><a className={classes.paraAnchor} href={`https://www.reddit.com/${item.data.subreddit_name_prefixed}`} >{item.data.subreddit_name_prefixed}\n                            </a>\n                        </p>\n\n                        <p>\n                            <a className={classes.paraAnchor} href={`https://www.reddit.com/u/${item.data.author}`} target=\"_blank\" rel=\"noopener\">u/{item.data.author}\n                            </a>\n                        </p>\n\n                        {\n                            item.data.thumbnail &&\n                            <a href={`https://www.reddit.com/${item.data.permalink}`} target=\"_blank\" rel=\"noopener\">\n                                <img className={classes.imageSize} src={item.data.thumbnail} alt=\"\" />\n                            </a>\n                        }\n\n                        {\n                            item.data.url==='' &&\n                            <a  href={`https://www.reddit.com/${item.data.permalink}`} target=\"_blank\" rel=\"noopener\"><img src={item.data.url} alt=\"\" /></a>\n                        }\n\n                        <h3><a className={classes.gifTestColor} href={`https://www.reddit.com/${item.data.permalink}`} target=\"_blank\" rel=\"noopener\">{item.data.title}</a></h3>\n\n                        <p>Comments {item.data.num_comments}</p>\n                    </div>\n                    ))}\n                </div>\n\n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Reddit;\n\n","/home/FoolMonkey007/Study/DeepThoughtAssignments/assignment2/src/hs.js",[],{"ruleId":"39","severity":1,"message":"40","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":14},{"ruleId":"39","severity":1,"message":"43","line":11,"column":11,"nodeType":"41","messageId":"42","endLine":11,"endColumn":17},{"ruleId":"44","severity":1,"message":"45","line":51,"column":25,"nodeType":"46","messageId":"47","endLine":51,"endColumn":27},{"ruleId":"48","severity":1,"message":"49","line":131,"column":36,"nodeType":"50","endLine":131,"endColumn":92},{"ruleId":"48","severity":1,"message":"49","line":132,"column":37,"nodeType":"50","endLine":132,"endColumn":93},{"ruleId":"48","severity":1,"message":"49","line":133,"column":37,"nodeType":"50","endLine":133,"endColumn":93},{"ruleId":"39","severity":1,"message":"51","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":88,"column":29,"nodeType":"50","messageId":"54","endLine":88,"endColumn":148,"fix":"55"},{"ruleId":"52","severity":1,"message":"53","line":94,"column":29,"nodeType":"50","messageId":"54","endLine":94,"endColumn":118,"fix":"56"},{"ruleId":"52","severity":1,"message":"53","line":101,"column":29,"nodeType":"50","messageId":"54","endLine":101,"endColumn":119,"fix":"57"},{"ruleId":"52","severity":1,"message":"53","line":104,"column":29,"nodeType":"50","messageId":"54","endLine":104,"endColumn":151,"fix":"58"},"no-unused-vars","'Reddit' is defined but never used.","Identifier","unusedVar","'APIKEY' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Giphy' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"59","text":"60"},{"range":"61","text":"60"},{"range":"62","text":"60"},{"range":"63","text":"60"},[2859,2869],"\"noopener noreferrer\"",[3137,3147],[3495,3505],[3711,3721]]